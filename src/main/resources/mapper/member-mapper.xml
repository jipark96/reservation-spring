<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.reservation_spring.member.mapper.MemberMapper">

    <!-- 회원가입 -->
    <insert id="memberSave" parameterType="com.example.reservation_spring.member.model.Member">
        INSERT INTO member (name, email, password, phone, adminCheck)
        VALUES (#{name}, #{email}, #{password}, #{phone}, #{adminCheck})
    </insert>

    <!-- 로그인(이메일로 회원 조회) -->
    <select id="findByEmail" parameterType="String" resultType="com.example.reservation_spring.member.model.Member">
        SELECT id, name, email, password, phone, adminCheck
        FROM member
        WHERE email = #{email}
    </select>

    <!-- 회원탈퇴 -->
    <delete id="memberDelete" parameterType="Long">
        DELETE FROM member
        WHERE id = #{id}
    </delete>

    <!-- 회원 조회 -->
    <select id="findAllMembers" resultType="com.example.reservation_spring.member.dto.GetMemberDto">
        SELECT id, name, email, phone
        FROM member
        order by id DESC
    </select>

    <!-- 회원 상세 조회 -->
    <select id="findByIdMember" parameterType="Long" resultType="com.example.reservation_spring.member.dto.GetMemberDto">
        SELECT id, name, email, phone
        FROM member
        WHERE id = #{id}
    </select>

    <!-- 회원 수정 -->
    <update id="memberUpdate" parameterType="com.example.reservation_spring.member.model.Member">
        UPDATE member
        SET name = #{name}, email = #{email}, password = #{password}, phone = #{phone}
        WHERE id = #{id}
    </update>

</mapper>

